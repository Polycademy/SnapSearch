# robots-namespace upstart service init file
# put this into /etc/init/robots-namespace.conf
# use "sudo start robots-namespace"/"sudo service robots-namespace start" to start the service 
# use "sudo stop robots-namespace"/"sudo service robots-namespace stop" to stop the service
# service gets started as root

description "Network Namespace for SnapSearch Robots"

# start after the network and local filesystem
start on (runlevel [2345] and local-filesystems)

task

respawn

# retry only 3 times for 3 second intervals
respawn limit 3 3

# change this to the relevant network configuration
env SUBNET=""
env VETH0_AND_SUBNET=""
env VETH1_AND_SUBNET="" 
env GATEWAY=""

# to make this idempotent we need a pre-start script that wipes out the previous configuration
# note that all upstart scripts are ran with set -e option enabled
# this means any error will result in script cancellation
# this is why we need `|| true` in the pre-start script
# we also ignore stderr cause these commands will result in an error at the beginning
# this is really annoying, but it's because of how imperative these commands are
# also beware that the changes below are not atomic, partial results need to be corrected with a rerun
pre-start script

    exec 2>>ROBOTS_NAMESPACE_LOG_FILE
    set -x

    iptables -t nat -D POSTROUTING -s "$SUBNET" -o eth0 -j MASQUERADE 2>/dev/null || true
    iptables -D FORWARD -i eth0 -o veth0 -j ACCEPT 2>/dev/null || true
    iptables -D FORWARD -o eth0 -i veth0 -j ACCEPT 2>/dev/null || true
    
    ip netns exec robots iptables -D OUTPUT -d "$GATEWAY" -j ACCEPT 2>/dev/null || true
    # add DNS delete below
    ip netns exec robots iptables -D OUTPUT -d 127.0.0.0/8 -j DROP 2>/dev/null || true
    ip netns exec robots iptables -D OUTPUT -d 10.0.0.0/8 -j DROP 2>/dev/null || true
    ip netns exec robots iptables -D OUTPUT -d 172.16.0.0/12 -j DROP 2>/dev/null || true
    ip netns exec robots iptables -D OUTPUT -d 192.168.0.0/16 -j DROP 2>/dev/null || true

    ip link delete veth0 2>/dev/null || true

    ip netns delete robots 2>/dev/null || true

end script

script

    exec 2>>ROBOTS_NAMESPACE_LOG_FILE
    set -x

    ip netns add robots

    ip link add veth0 type veth peer name veth1

    ip link set dev veth1 netns robots

    ifconfig veth0 "$VETH0_AND_SUBNET" up

    ip netns exec robots ifconfig veth1 "$VETH1_AND_SUBNET" up

    ip netns exec robots ip link set dev lo up 

    ip netns exec robots ip route add default via "$GATEWAY"

    # 1. connect veth0 to eth0 to allow outbound internet access
    # 2. allow outbound packets back to the gateway and to the DNS
    # 3. disallow outbound loopback and private network packets

    sysctl net.ipv4.conf.all.forwarding=1
    
    iptables -t nat -A POSTROUTING -s "$SUBNET" -o eth0 -j MASQUERADE
    iptables -A FORWARD -i eth0 -o veth0 -j ACCEPT
    iptables -A FORWARD -o eth0 -i veth0 -j ACCEPT
    
    ip netns exec robots iptables -A OUTPUT -d "$GATEWAY" -j ACCEPT
    # add DNS append below
    ip netns exec robots iptables -A OUTPUT -d 127.0.0.0/8 -j DROP
    ip netns exec robots iptables -A OUTPUT -d 10.0.0.0/8 -j DROP
    ip netns exec robots iptables -A OUTPUT -d 172.16.0.0/12 -j DROP
    ip netns exec robots iptables -A OUTPUT -d 192.168.0.0/16 -j DROP

end script